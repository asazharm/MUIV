'''
Данный скрипт производит расчет переменной y в зависимости от переменной (x).
Переменные (x) должны храниться в файле 'source_data.txt';
Переменные (y) записываются в файл 'result.txt';
Файл 'source_data.txt' и 'result.txt' ДОЛЖНЫ находиться в одном каталоге со скриптом;
ВНИМАНИЕ: файл 'result.txt' перезаписывается с каждым выполнением скрипта;
'''

from math import sqrt  # Для вычисления корня
from decimal import Decimal  # Для точности расчета вещественных чисел


def calculate(x):
    '''Функция принимает значение (x), на основе которого производит расчет и возвращает Decimal(y)'''
    if x < -3:
        y = Decimal(((27 * x ** 3 + 40 * x ** 2 + 24) ** 5 + 71 * x ** 3) / (
                (6 * x ** 4 + x ** 3) ** 6 + (93 * x ** 2 + 11) ** 4))
        return y
    elif -3 <= x < 2:
        y = Decimal((sqrt((89 * x ** 8 + 69 * x ** 2 + 73) ** 5) - 64 * x ** 6) / (
                (13 * x ** 7 + x ** 2) ** 5 + (71 * x ** 2 - 36) ** 4))
        return y
    elif x >= 2:
        y = Decimal(((74 * x ** 3 + 32 * x ** 2 + 83) ** 7 - 87 * x ** 5) / (
                (79 * x ** 5 - x ** 3) ** 6 + sqrt((42 * x - 78) ** 3)))
        return y


'''Определяем словарь, хранящий исходные и расчитанные значения'''
data = {}

with open('source_data.txt', 'r', encoding='UTF-8') as f:
    for line in f.read().splitlines():
        '''Основной цикл, считывает (x) из 'source_data.txt', производит расчет и сохраняет x(ключ):y(значение) в data'''
        x = int(line[2:])
        y = calculate(x)
        data[x] = y

with open('result.txt', 'w', encoding='UTF-8') as f:
    for x, y in data.items():
        print('При x = {} значение y = {:.3f}'.format(x, float(str(y).split('E')[0])), file=f)
        '''
        При отбрасовании чисел после запятой, (y) округляется к нулю, независимо от значения,
        поэтому пришлось (y) преобразовать в string, отсечь E-*, и преобразовать обратно к float
        '''